import os
import telebot
from dotenv import load_dotenv
from datetime import datetime, timedelta
import openai

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)
openai.api_key = OPENAI_API_KEY

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–∞—Ç—É –ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
user_access = {}

def has_access(user_id):
    now = datetime.now()
    if user_id in user_access:
        started = user_access[user_id]
        return now - started <= timedelta(days=7)
    else:
        user_access[user_id] = now
        return True

def generate_promo_idea(business_description):
    prompt = (
        f"–û–ø–∏—à–∏ —Ü—ñ–ª—å–æ–≤—É –∞—É–¥–∏—Ç–æ—Ä—ñ—é –¥–ª—è –±—ñ–∑–Ω–µ—Å—É: {business_description}.\n"
        f"–ó–≥–µ–Ω–µ—Ä—É–π —ñ–¥–µ—é –ø—Ä–æ—Å—É–≤–∞–Ω–Ω—è –≤ TikTok.\n"
        f"–ü—Ä–∏–¥—É–º–∞–π PDF-–≥–∞–π–¥ —è–∫ –ª—ñ–¥-–º–∞–≥–Ω—ñ—Ç + —Ç–µ–∫—Å—Ç –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó.\n"
        f"–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ."
    )
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢–∏ –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=800,
            temperature=0.7
        )
        return response.choices[0].message["content"].strip()
    except Exception as e:
        print("OpenAI –ø–æ–º–∏–ª–∫–∞:", e)
        return "‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ OpenAI."

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('–ê–Ω–∞–ª—ñ–∑ –ø–æ—Å—Ç–∞', '–ü—Ä–æ –±–æ—Ç–∞')

    inline_markup = telebot.types.InlineKeyboardMarkup()
    inline_markup.row(
        telebot.types.InlineKeyboardButton("üëã –ü–æ—á–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑", callback_data="start_analysis"),
        telebot.types.InlineKeyboardButton("–°—Ü–µ–Ω–∞—Ä—ñ–π –¥–ª—è —Å—Ç–æ—Ä—ñ—Å", callback_data="story_script")
    )

    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É –∑ –ø—Ä–æ—Å—É–≤–∞–Ω–Ω—è–º —Ç–≤–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É üß†\n–û–±–µ—Ä–∏ –¥—ñ—é –Ω–∏–∂—á–µ üëá",
        reply_markup=markup
    )
    bot.send_message(message.chat.id, "–û–±–µ—Ä–∏ –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ:", reply_markup=inline_markup)

@bot.message_handler(commands=['–≥–∞–π–¥'])
def send_guide(message):
    try:
        with open("lead_magnet.pdf", "rb") as file:
            bot.send_document(message.chat.id, file)
    except Exception:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –≥–∞–π–¥. –ü–µ—Ä–µ–≤—ñ—Ä —Ñ–∞–π–ª lead_magnet.pdf.")

@bot.message_handler(func=lambda m: m.text == '–ê–Ω–∞–ª—ñ–∑ –ø–æ—Å—Ç–∞')
def analyze_post(message):
    bot.send_message(message.chat.id, "üîç –ù–∞–¥—ñ—à–ª–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É...")

@bot.message_handler(func=lambda m: m.text == '–ü—Ä–æ –±–æ—Ç–∞')
def about_bot(message):
    bot.send_message(
        message.chat.id,
        "üß† –¶–µ–π –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –¥–æ–ø–æ–º–æ–≥–∏ –≤ –ø—Ä–æ—Å—É–≤–∞–Ω–Ω—ñ –º–∞–ª–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É.\n"
        "–í—ñ–Ω –≥–µ–Ω–µ—Ä—É—î —ñ–¥–µ—ó, —Ç–µ–∫—Å—Ç–∏, –ª—ñ–¥-–º–∞–≥–Ω—ñ—Ç–∏ —Ç–∞ –¥–æ–ø–æ–º–∞–≥–∞—î –∑ –ø—Ä–æ–¥–∞–∂–∞–º–∏.\n"
        "üöÄ –ù–∞ –±–∞–∑—ñ OpenAI (ChatGPT)."
    )

@bot.callback_query_handler(func=lambda call: True)
def handle_inline_buttons(call):
    if call.data == "start_analysis":
        bot.send_message(call.message.chat.id, "‚úèÔ∏è –ù–∞–ø–∏—à–∏, —á–∏–º –∑–∞–π–º–∞—î—Ç—å—Å—è —Ç–≤—ñ–π –±—ñ–∑–Ω–µ—Å.")
    elif call.data == "story_script":
        bot.send_message(call.message.chat.id, "üìö –°—Ü–µ–Ω–∞—Ä—ñ–π –¥–ª—è —Å—Ç–æ—Ä—ñ—Å –¥–æ—Å—Ç—É–ø–Ω–∏–π —á–µ—Ä–µ–∑ /–≥–∞–π–¥")

@bot.message_handler(func=lambda m: True)
def handle_message(message):
    user_id = message.from_user.id

    if not has_access(user_id):
        bot.send_message(
            message.chat.id,
            "‚õîÔ∏è –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü—Ä–∏–¥–±–∞–π –ø—ñ–¥–ø–∏—Å–∫—É –∑–∞ $9 –Ω–∞ –º—ñ—Å—è—Ü—å."
        )
        return

    business = message.text
    bot.send_message(message.chat.id, "üîç –ê–Ω–∞–ª—ñ–∑—É—é –≤–∞—à –±—ñ–∑–Ω–µ—Å...")

    result = generate_promo_idea(business)
    bot.send_message(message.chat.id, result)

    bot.send_message(message.chat.id, "üìé –•–æ—á–µ—à –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π PDF? –ù–∞–ø–∏—à–∏ /–≥–∞–π–¥")

bot.polling()











